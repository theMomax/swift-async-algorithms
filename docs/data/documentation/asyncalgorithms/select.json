{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Author(s): "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/phausler"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/TaskSelect.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestTaskSelect.swift"},{"type":"text","text":" "},{"type":"text","text":"]"}]},{"anchor":"Introduction","level":2,"type":"heading","text":"Introduction"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A fundamental part of many algorithms is being able to select the first resolved task from a given list of active tasks. This enables algorithms like "},{"type":"codeVoice","code":"debounce"},{"type":"text","text":" or "},{"type":"codeVoice","code":"merge"},{"type":"text","text":"."}]},{"anchor":"Proposed-Solution","level":2,"type":"heading","text":"Proposed Solution"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Selecting the first task to complete from a list of active tasks is a similar algorithm to "},{"type":"codeVoice","code":"select(2)"},{"type":"text","text":". This has similar behavior to "},{"type":"codeVoice","code":"TaskGroup"},{"type":"text","text":" except that instead of child tasks this function transacts upon already running tasks and does not cancel them upon completion of the selection and does not need to await for the completion of all of the tasks in the list to select."}]},{"type":"codeListing","syntax":"swift","code":["extension Task {","  public static func select<Tasks: Sequence & Sendable>(","    _ tasks: Tasks","  ) async -> Task<Success, Failure>","  ","  public static func select(","    _ tasks: Task<Success, Failure>...","  ) async -> Task<Success, Failure>","}"]},{"anchor":"Detailed-Design","level":2,"type":"heading","text":"Detailed Design"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given any number of "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" objects that share the same "},{"type":"codeVoice","code":"Success"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" types; "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" will suspend and await each tasks result and resume when the first task has produced a result. While the calling task of "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" is suspended if that task is cancelled the tasks being selected receive the cancel. This is similar to the family of "},{"type":"codeVoice","code":"TaskGroup"},{"type":"text","text":" with a few behavioral and structural differences."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"withTaskGroup"},{"type":"text","text":" API will create efficient child tasks."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" API takes pre-existing tasks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"withTaskGroup"},{"type":"text","text":" API will await all child tasks to be finished before returning."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" API will await for the first task to be finished before returning."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"withTaskGroup"},{"type":"text","text":" API will cancel all outstanding child tasks upon awaiting its return."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" API will let the non selected tasks keep on running."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"withTaskGroup"},{"type":"text","text":" can support having 0 child tasks."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" API requires at least 1 task to select over, anything less is a programmer error."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that "},{"type":"codeVoice","code":"withTaskGroup"},{"type":"text","text":" is highly suited to run work in parallel, whereas "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" is intended to find the first task that provides a value. There is inherent additional cost to the non-child tasks so "},{"type":"codeVoice","code":"Task.select"},{"type":"text","text":" should not be used as a replacement for anywhere that is more suitable as a group, but offers more potential for advanced algorithms."}]},{"anchor":"Alternatives-Considered","level":2,"type":"heading","text":"Alternatives Considered"},{"anchor":"Future-Directions","level":2,"type":"heading","text":"Future Directions"},{"anchor":"CreditsInspiration","level":2,"type":"heading","text":"Credits\/Inspiration"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncalgorithms\/select"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Select","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"Task.select","role":"article","modules":[{"name":"AsyncAlgorithms"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms"]]},"seeAlsoSections":[{"title":"Getting Started","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AdjacentPairs","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/BufferedBytes","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Chain","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Channel","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Chunked","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Collections","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/CombineLatest","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Compacted","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Debounce","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Intersperse","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Joined","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Lazy","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Merge","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Reductions","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/RemoveDuplicates","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Throttle","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Timer","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Zip"],"generated":true}],"references":{"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Zip":{"role":"article","title":"Zip","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip2Sequence.swift"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip3Sequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestZip.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Zip","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/zip"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Joined":{"role":"article","title":"Joined","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Joined","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/joined"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestCombineLatest.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestCombineLatest.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestCombineLatest.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncChain2Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain2Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain2Sequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Intersperse":{"role":"article","title":"Intersperse","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncInterspersedSequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestInterspersed.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Intersperse","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/intersperse"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestMerge.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestMerge.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncMerge3Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncMerge3Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncMerge3Sequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Throttle":{"role":"article","title":"Throttle","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Throttle","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/throttle"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestTaskSelect.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestTaskSelect.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestTaskSelect.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Timer":{"role":"article","title":"Timer","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Timer","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/timer"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/CombineLatest":{"role":"article","title":"Combine Latest","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest2Sequence.swift"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest3Sequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestCombineLatest.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/CombineLatest","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/combinelatest"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncChain3Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain3Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain3Sequence.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/TaskSelect.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/TaskSelect.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/TaskSelect.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestBufferedByteIterator.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestBufferedByteIterator.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestBufferedByteIterator.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncBufferedByteIterator.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncBufferedByteIterator.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncBufferedByteIterator.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestZip.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestZip.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestZip.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Debounce":{"role":"article","title":"Debounce","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Debounce","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/debounce"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/RemoveDuplicates":{"role":"article","title":"RemoveDuplicates","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/RemoveDuplicates","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/removeduplicates"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Chunked":{"role":"article","title":"Chunked","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Chunked","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/chunked"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncZip2Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip2Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip2Sequence.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestLazy.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestLazy.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestLazy.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestInterspersed.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestInterspersed.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestInterspersed.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncZip3Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip3Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncZip3Sequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms":{"role":"collection","title":"AsyncAlgorithms","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift Async Algorithms"}]},{"type":"text","text":" is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Reductions":{"role":"article","title":"Reductions","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Reductions","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/reductions"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Channel":{"role":"article","title":"Channel","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Channel","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/channel"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Lazy":{"role":"article","title":"AsyncLazySequence","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncLazySequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestLazy.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Lazy","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/lazy"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncCombineLatest3Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest3Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest3Sequence.swift"},"https://github.com/phausler":{"title":"Philippe Hausler","titleInlineContent":[{"type":"text","text":"Philippe Hausler"}],"type":"link","identifier":"https:\/\/github.com\/phausler","url":"https:\/\/github.com\/phausler"},"https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestChain.swift":{"title":"Tests","titleInlineContent":[{"type":"text","text":"Tests"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestChain.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestChain.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncLazySequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncLazySequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncLazySequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/BufferedBytes":{"role":"article","title":"AsyncBufferedByteIterator","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncBufferedByteIterator.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestBufferedByteIterator.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/BufferedBytes","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/bufferedbytes"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncCombineLatest2Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest2Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncCombineLatest2Sequence.swift"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncInterspersedSequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncInterspersedSequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncInterspersedSequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Merge":{"role":"article","title":"Merge","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/Asyncmerge2Sequence.swift"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncMerge3Sequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestMerge.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Merge","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/merge"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AdjacentPairs":{"role":"article","title":"AdjacentPairs","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AdjacentPairs","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/adjacentpairs"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/Asyncmerge2Sequence.swift":{"title":"Source","titleInlineContent":[{"type":"text","text":"Source"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/Asyncmerge2Sequence.swift","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/Asyncmerge2Sequence.swift"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Compacted":{"role":"article","title":"Compacted","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Compacted","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/compacted"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Chain":{"role":"article","title":"Chain","abstract":[{"type":"text","text":"["},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain2Sequence.swift"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncChain3Sequence.swift"},{"type":"text","text":" |"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Tests\/AsyncAlgorithmsTests\/TestChain.swift"},{"type":"text","text":"]"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Chain","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/chain"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/Collections":{"role":"article","title":"Collection Initializers","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/Collections","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/collections"}}}