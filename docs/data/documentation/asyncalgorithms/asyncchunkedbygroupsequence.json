{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncChunkedByGroupSequence"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Base"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Collected"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AsyncSequence","preciseIdentifier":"s:Sci"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Collected"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RangeReplaceableCollection","preciseIdentifier":"s:Sm"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Collected"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Group chunks are determined by passing two consecutive elements to a closure which tests"},{"type":"text","text":" "},{"type":"text","text":"whether they are in the same group. When the "},{"type":"codeVoice","code":"AsyncChunkedByGroupSequence"},{"type":"text","text":" iterator"},{"type":"text","text":" "},{"type":"text","text":"receives the first element from the base sequence, it will immediately be added to a group. When"},{"type":"text","text":" "},{"type":"text","text":"it receives the second item, it tests whether the previous item and the current item belong to the"},{"type":"text","text":" "},{"type":"text","text":"same group. If they are not in the same group, then the iterator emits the first item’s group and a"},{"type":"text","text":" "},{"type":"text","text":"new group is created containing the second item. Items declared to be in the same group"},{"type":"text","text":" "},{"type":"text","text":"accumulate until a new group is declared, or the iterator finds the end of the base sequence."},{"type":"text","text":" "},{"type":"text","text":"When the base sequence terminates, the final group is emitted. If the base sequence throws an"},{"type":"text","text":" "},{"type":"text","text":"error, "},{"type":"codeVoice","code":"AsyncChunkedByGroupSequence"},{"type":"text","text":" will rethrow that error immediately and discard"},{"type":"text","text":" "},{"type":"text","text":"any current group."}]},{"type":"codeListing","syntax":null,"code":[" let numbers = [10, 20, 30, 10, 40, 40, 10, 20].async"," let chunks = numbers.chunked { $0 <= $1 }"," for await numberChunk in chunks {","   print(numberChunk)"," }"," \/\/ prints"," \/\/ [10, 20, 30]"," \/\/ [10, 40, 40]"," \/\/ [10, 20]"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/s8SendableP","doc:\/\/org.swift.AsyncAlgorithms\/Sci"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that chunks by testing if two elements belong to the same group."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncChunkedByGroupSequence"}],"title":"AsyncChunkedByGroupSequence","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:15AsyncAlgorithms0A22ChunkedByGroupSequenceV","modules":[{"name":"AsyncAlgorithms"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncChunkedByGroupSequence"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/Iterator"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/makeAsyncIterator()"]},{"title":"Type Aliases","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/Element"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/AsyncSequence-Implementations","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/AsyncSequence-Implementations"],"generated":true}],"references":{"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms":{"role":"collection","title":"AsyncAlgorithms","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift Async Algorithms"}]},{"type":"text","text":" is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/Iterator":{"role":"symbol","title":"AsyncChunkedByGroupSequence.Iterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"abstract":[{"type":"text","text":"The iterator for a "},{"type":"codeVoice","code":"AsyncChunkedByGroupSequence"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/Iterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"url":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/iterator"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/makeAsyncIterator()":{"role":"symbol","title":"makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Iterator","preciseIdentifier":"s:15AsyncAlgorithms0A22ChunkedByGroupSequenceV8IteratorV"}],"abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/makeAsyncIterator()","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/makeasynciterator()"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/AsyncSequence-Implementations":{"role":"collectionGroup","title":"AsyncSequence Implementations","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/AsyncSequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/asyncsequence-implementations"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/Element":{"role":"symbol","title":"AsyncChunkedByGroupSequence.Element","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/Element","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Element"}],"url":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/element"},"doc://org.swift.AsyncAlgorithms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/org.swift.AsyncAlgorithms\/s8SendableP"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence":{"role":"symbol","title":"AsyncChunkedByGroupSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncChunkedByGroupSequence"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that chunks by testing if two elements belong to the same group."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncChunkedByGroupSequence"}],"url":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence"},"doc://org.swift.AsyncAlgorithms/Sci":{"type":"unresolvable","title":"_Concurrency.AsyncSequence","identifier":"doc:\/\/org.swift.AsyncAlgorithms\/Sci"}}}