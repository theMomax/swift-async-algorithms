{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"readFunction"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"capacity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum number of bytes that a single invocation of "},{"type":"codeVoice","code":"readFunction"},{"type":"text","text":" may produce."},{"type":"text","text":" "},{"type":"text","text":"This is the allocated capacity of the backing buffer for iteration; the value must be greater than 0."}]}]},{"name":"readFunction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The function for refilling the buffer."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator\/init(capacity:readfunction:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncBufferedByteIterator\/init(capacity:readFunction:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates an asynchronous buffered byte iterator with a specified capacity and read function."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"readFunction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"init(capacity:readFunction:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:15AsyncAlgorithms0A20BufferedByteIteratorV8capacity12readFunctionACSi_SiSwYaYbKctcfc","modules":[{"name":"AsyncAlgorithms"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncBufferedByteIterator"]]},"references":{"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms":{"role":"collection","title":"AsyncAlgorithms","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift Async Algorithms"}]},{"type":"text","text":" is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncBufferedByteIterator":{"role":"symbol","title":"AsyncBufferedByteIterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncBufferedByteIterator"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncIterator"},{"type":"text","text":" that provides a convenient and high-performance implementation"},{"type":"text","text":" "},{"type":"text","text":"of a common architecture for "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", otherwise known as byte streams."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncBufferedByteIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncBufferedByteIterator"}],"url":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncBufferedByteIterator/init(capacity:readFunction:)":{"role":"symbol","title":"init(capacity:readFunction:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"readFunction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an asynchronous buffered byte iterator with a specified capacity and read function."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncBufferedByteIterator\/init(capacity:readFunction:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator\/init(capacity:readfunction:)"}}}