{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Policy"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A policy for buffering elements to an "},{"type":"codeVoice","code":"AsyncLimitBuffer"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Policy"}],"title":"AsyncLimitBuffer.Policy","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:15AsyncAlgorithms0A11LimitBufferC6PolicyO","modules":[{"name":"AsyncAlgorithms"}],"navigatorTitle":[{"kind":"identifier","text":"Policy"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/bufferingNewest(_:)","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/bufferingOldest(_:)","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/unbounded"]}],"references":{"doc://org.swift.AsyncAlgorithms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/org.swift.AsyncAlgorithms\/s8SendableP"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncLimitBuffer/Policy/bufferingNewest(_:)":{"role":"symbol","title":"AsyncLimitBuffer.Policy.bufferingNewest(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferingNewest"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A policy for limiting to a specific number of newest values."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/bufferingNewest(_:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/bufferingnewest(_:)"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncLimitBuffer":{"role":"symbol","title":"AsyncLimitBuffer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncLimitBuffer"}],"abstract":[{"type":"text","text":"A buffer that limits pushed items by a certain count."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncLimitBuffer"}],"url":"\/documentation\/asyncalgorithms\/asynclimitbuffer"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncLimitBuffer/Policy":{"role":"symbol","title":"AsyncLimitBuffer.Policy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Policy"}],"abstract":[{"type":"text","text":"A policy for buffering elements to an "},{"type":"codeVoice","code":"AsyncLimitBuffer"}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Policy"}],"url":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms":{"role":"collection","title":"AsyncAlgorithms","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift Async Algorithms"}]},{"type":"text","text":" is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncLimitBuffer/Policy/unbounded":{"role":"symbol","title":"AsyncLimitBuffer.Policy.unbounded","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"unbounded"}],"abstract":[{"type":"text","text":"A policy for no bounding limit of pushed elements."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/unbounded","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/unbounded"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncLimitBuffer/Policy/bufferingOldest(_:)":{"role":"symbol","title":"AsyncLimitBuffer.Policy.bufferingOldest(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferingOldest"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A policy for limiting to a specific number of oldest values."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncLimitBuffer\/Policy\/bufferingOldest(_:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/bufferingoldest(_:)"}}}