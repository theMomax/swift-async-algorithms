{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncThrowingInclusiveReductionsSequence","preciseIdentifier":"s:15AsyncAlgorithms0A35ThrowingInclusiveReductionsSequenceV","text":"AsyncThrowingInclusiveReductionsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous sequence of the reduced elements."}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that combines the previously reduced"},{"type":"text","text":" "},{"type":"text","text":"result and the next element in the receiving sequence. If the closure"},{"type":"text","text":" "},{"type":"text","text":"throws an error, the sequence throws."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be seen as applying the reduce function to each element and"},{"type":"text","text":" "},{"type":"text","text":"providing the initial value followed by these results as an asynchronous sequence."}]},{"type":"codeListing","syntax":null,"code":["let runningTotal = [1, 2, 3, 4].async.reductions(+)","print(await Array(runningTotal))","","\/\/ prints [1, 3, 6, 10]"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:)-4efsu"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency\/AsyncSequence\/reductions(_:)-4efsu","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns an asynchronous sequence containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the asynchronous sequence using the given error-throwing closure."}],"kind":"symbol","metadata":{"role":"symbol","title":"reductions(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncThrowingInclusiveReductionsSequence","preciseIdentifier":"s:15AsyncAlgorithms0A35ThrowingInclusiveReductionsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:Sci15AsyncAlgorithmsE10reductionsyAA0A35ThrowingInclusiveReductionsSequenceVyxG7ElementQzAG_AGtYaYbKcF","extendedModule":"_Concurrency","modules":[{"name":"AsyncAlgorithms"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency","doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency\/AsyncSequence"]]},"references":{"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncThrowingInclusiveReductionsSequence":{"role":"symbol","title":"AsyncThrowingInclusiveReductionsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncThrowingInclusiveReductionsSequence"}],"abstract":[{"type":"text","text":"An asynchronous sequence containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the asynchronous sequence using a given error-throwing closure."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncThrowingInclusiveReductionsSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncThrowingInclusiveReductionsSequence"}],"url":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/_Concurrency":{"role":"collection","title":"_Concurrency","abstract":[],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/_concurrency"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms":{"role":"collection","title":"AsyncAlgorithms","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift Async Algorithms"}]},{"type":"text","text":" is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/_Concurrency/AsyncSequence/reductions(_:)-4efsu":{"role":"symbol","title":"reductions(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncThrowingInclusiveReductionsSequence","preciseIdentifier":"s:15AsyncAlgorithms0A35ThrowingInclusiveReductionsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an asynchronous sequence containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the asynchronous sequence using the given error-throwing closure."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency\/AsyncSequence\/reductions(_:)-4efsu","kind":"symbol","type":"topic","url":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:)-4efsu"},"doc://org.swift.AsyncAlgorithms/documentation/AsyncAlgorithms/_Concurrency/AsyncSequence":{"role":"symbol","title":"AsyncSequence","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequence","preciseIdentifier":"s:Sci"}],"abstract":[{"type":"text","text":"A sequence where providing the next element is an asynchronous operation."}],"identifier":"doc:\/\/org.swift.AsyncAlgorithms\/documentation\/AsyncAlgorithms\/_Concurrency\/AsyncSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequence"}],"url":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence"}}}