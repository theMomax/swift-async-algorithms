{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/adjacentpairs","title":"AdjacentPairs","type":"article"},{"path":"\/documentation\/asyncalgorithms\/bufferedbytes","title":"AsyncBufferedByteIterator","type":"article"},{"path":"\/documentation\/asyncalgorithms\/chain","title":"Chain","type":"article"},{"path":"\/documentation\/asyncalgorithms\/channel","title":"Channel","type":"article"},{"path":"\/documentation\/asyncalgorithms\/chunked","title":"Chunked","type":"article"},{"path":"\/documentation\/asyncalgorithms\/collections","title":"Collection Initializers","type":"article"},{"path":"\/documentation\/asyncalgorithms\/combinelatest","title":"Combine Latest","type":"article"},{"path":"\/documentation\/asyncalgorithms\/compacted","title":"Compacted","type":"article"},{"path":"\/documentation\/asyncalgorithms\/debounce","title":"Debounce","type":"article"},{"path":"\/documentation\/asyncalgorithms\/intersperse","title":"Intersperse","type":"article"},{"path":"\/documentation\/asyncalgorithms\/joined","title":"Joined","type":"article"},{"path":"\/documentation\/asyncalgorithms\/lazy","title":"AsyncLazySequence","type":"article"},{"path":"\/documentation\/asyncalgorithms\/merge","title":"Merge","type":"article"},{"path":"\/documentation\/asyncalgorithms\/reductions","title":"Reductions","type":"article"},{"path":"\/documentation\/asyncalgorithms\/removeduplicates","title":"RemoveDuplicates","type":"article"},{"path":"\/documentation\/asyncalgorithms\/select","title":"Task.select","type":"article"},{"path":"\/documentation\/asyncalgorithms\/throttle","title":"Throttle","type":"article"},{"path":"\/documentation\/asyncalgorithms\/timer","title":"Timer","type":"article"},{"path":"\/documentation\/asyncalgorithms\/zip","title":"Zip","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/iterator\/next()","title":"func next() async -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchannel\/iterator","title":"AsyncChannel.Iterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/init(element:)","title":"init(element: Element.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/send(_:)","title":"func send(Element) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:into:)-1tvze","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:into:)-603hl","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:)-3enn4","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:)-3grup","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:into:)-1la91","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:into:)-75x9a","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compactmap(_:)-24cw5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compactmap(_:)-7cfmu","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/flatmap(_:)-1fadd","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/flatmap(_:)-5vnyd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/map(_:)-d25v","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/map(_:)-rzrm","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:_:)-1mjet","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:_:)-6zcl4","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(into:_:)-2hos3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(into:_:)-9qah1","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchannel\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:into:)-1tvze","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(by:into:)-603hl","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:)-3enn4","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:)-3grup","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:into:)-1la91","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/chunks(ofcount:or:into:)-75x9a","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compactmap(_:)-24cw5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compactmap(_:)-7cfmu","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/flatmap(_:)-1fadd","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/flatmap(_:)-5vnyd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/map(_:)-d25v","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/map(_:)-rzrm","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:_:)-1mjet","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(_:_:)-6zcl4","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(into:_:)-2hos3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/reductions(into:_:)-9qah1","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchannel\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchannel\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchannel","title":"AsyncChannel","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/pop()","title":"func pop() async -> Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/push(_:)","title":"func push(Element) async","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/bufferingnewest(_:)","title":"case bufferingNewest(Int)","type":"case"},{"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/bufferingoldest(_:)","title":"case bufferingOldest(Int)","type":"case"},{"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy\/unbounded","title":"case unbounded","type":"case"}],"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer\/policy","title":"AsyncLimitBuffer.Policy","type":"enum"}],"path":"\/documentation\/asyncalgorithms\/asynclimitbuffer","title":"AsyncLimitBuffer","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/iterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/iterator","title":"AsyncThrowingChannel.Iterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/init(_:)","title":"init(Element.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/fail(_:)","title":"func fail(Error)","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/send(_:)","title":"func send(Element) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:into:)-1tv2h","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:into:)-ix98","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:)-8bcem","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:)-8j7g7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:into:)-7gejg","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:into:)-8lj5u","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compactmap(_:)-3j086","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compactmap(_:)-6bayd","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/flatmap(_:)-3ikei","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/flatmap(_:)-8bm8p","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/map(_:)-2fp1y","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/map(_:)-3wpxf","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:_:)-8fpp3","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:_:)-9na5l","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(into:_:)-13kql","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(into:_:)-65u9g","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:into:)-1tv2h","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(by:into:)-ix98","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:)-8bcem","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:)-8j7g7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:into:)-7gejg","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/chunks(ofcount:or:into:)-8lj5u","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compactmap(_:)-3j086","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compactmap(_:)-6bayd","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/flatmap(_:)-3ikei","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/flatmap(_:)-8bm8p","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/map(_:)-2fp1y","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/map(_:)-3wpxf","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:_:)-8fpp3","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(_:_:)-9na5l","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(into:_:)-13kql","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/reductions(into:_:)-65u9g","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingchannel","title":"AsyncThrowingChannel","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffer\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffer\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffer\/pop()","title":"func pop() async throws -> Output?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffer\/push(_:)","title":"func push(Input) async","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncbuffer","title":"AsyncBuffer","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/iterator\/next()","title":"func next() async rethrows -> (Base.Element, Base.Element)?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/iterator\/element","title":"AsyncAdjacentPairsSequence.Iterator.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/iterator","title":"AsyncAdjacentPairsSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/element","title":"AsyncAdjacentPairsSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:into:)-1cyma","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:into:)-4qefc","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:)-9fjfn","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:)-9oagx","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:into:)-18nxi","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:into:)-3udse","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compactmap(_:)-8f7bl","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compactmap(_:)-yde1","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/flatmap(_:)-60qnq","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/flatmap(_:)-8b9ti","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/map(_:)-1w3ji","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/map(_:)-5tmp2","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:_:)-23t09","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:_:)-2fu3d","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(into:_:)-2m6oh","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(into:_:)-7jvu5","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:into:)-1cyma","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(by:into:)-4qefc","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:)-9fjfn","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:)-9oagx","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:into:)-18nxi","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/chunks(ofcount:or:into:)-3udse","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compactmap(_:)-8f7bl","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compactmap(_:)-yde1","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/flatmap(_:)-60qnq","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/flatmap(_:)-8b9ti","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/map(_:)-1w3ji","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/map(_:)-5tmp2","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:_:)-23t09","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(_:_:)-2fu3d","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(into:_:)-2m6oh","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/reductions(into:_:)-7jvu5","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncadjacentpairssequence","title":"AsyncAdjacentPairsSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/iterator","title":"AsyncBufferSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:into:)-7j2ya","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:into:)-8ozxg","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:)-18ne7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:)-1fup0","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:into:)-7jjk8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:into:)-98sew","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compactmap(_:)-1tl72","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compactmap(_:)-bv66","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/flatmap(_:)-1l3sb","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/flatmap(_:)-277gw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/map(_:)-5k84n","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/map(_:)-78sa9","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:_:)-7p6fl","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:_:)-9jpv0","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(into:_:)-78zlg","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(into:_:)-942q","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/element","title":"AsyncBufferSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:into:)-7j2ya","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(by:into:)-8ozxg","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:)-18ne7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:)-1fup0","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:into:)-7jjk8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/chunks(ofcount:or:into:)-98sew","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compactmap(_:)-1tl72","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compactmap(_:)-bv66","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/flatmap(_:)-1l3sb","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/flatmap(_:)-277gw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/map(_:)-5k84n","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/map(_:)-78sa9","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:_:)-7p6fl","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(_:_:)-9jpv0","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(into:_:)-78zlg","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/reductions(into:_:)-942q","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/element","title":"AsyncBufferSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncbuffersequence","title":"AsyncBufferSequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator\/init(capacity:readfunction:)","title":"init(capacity: Int, readFunction: (UnsafeMutableRawBufferPointer) async throws -> Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator\/next()","title":"func next() async throws -> UInt8?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator\/element","title":"AsyncBufferedByteIterator.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncbufferedbyteiterator","title":"AsyncBufferedByteIterator","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/iterator","title":"AsyncChain2Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:into:)-7yfik","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:into:)-8hfxg","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:)-5dds4","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:)-6xoow","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:into:)-664qh","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:into:)-7mffd","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compactmap(_:)-21ibv","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compactmap(_:)-47dj","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/flatmap(_:)-511jm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/flatmap(_:)-8hdnk","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/map(_:)-7nk1f","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/map(_:)-900ww","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:_:)-3wrzl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:_:)-9etkw","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(into:_:)-1fdh1","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(into:_:)-9i52p","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/element","title":"AsyncChain2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:into:)-7yfik","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(by:into:)-8hfxg","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:)-5dds4","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:)-6xoow","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:into:)-664qh","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/chunks(ofcount:or:into:)-7mffd","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compactmap(_:)-21ibv","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compactmap(_:)-47dj","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/flatmap(_:)-511jm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/flatmap(_:)-8hdnk","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/map(_:)-7nk1f","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/map(_:)-900ww","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:_:)-3wrzl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(_:_:)-9etkw","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(into:_:)-1fdh1","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/reductions(into:_:)-9i52p","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/element","title":"AsyncChain2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchain2sequence","title":"AsyncChain2Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/iterator","title":"AsyncChain3Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:into:)-2di5z","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:into:)-4f4rt","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:)-3bd8i","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:)-54rch","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:into:)-6c3sk","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:into:)-fcuz","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compactmap(_:)-72nuc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compactmap(_:)-9ab8i","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/flatmap(_:)-2h55n","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/flatmap(_:)-9e6z2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/map(_:)-47zgr","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/map(_:)-7yh27","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:_:)-4byh6","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:_:)-6o0u4","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(into:_:)-2gxcq","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(into:_:)-5yub0","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/element","title":"AsyncChain3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:into:)-2di5z","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(by:into:)-4f4rt","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:)-3bd8i","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:)-54rch","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:into:)-6c3sk","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/chunks(ofcount:or:into:)-fcuz","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compactmap(_:)-72nuc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compactmap(_:)-9ab8i","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/flatmap(_:)-2h55n","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/flatmap(_:)-9e6z2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/map(_:)-47zgr","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/map(_:)-7yh27","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:_:)-4byh6","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(_:_:)-6o0u4","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(into:_:)-2gxcq","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/reductions(into:_:)-5yub0","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/element","title":"AsyncChain3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchain3sequence","title":"AsyncChain3Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/iterator\/next()","title":"func next() async rethrows -> Collected?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/iterator","title":"AsyncChunkedByGroupSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/element","title":"AsyncChunkedByGroupSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-95r3o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-9fgls","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:)-4bo7r","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:)-8nqxc","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:into:)-518d5","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:into:)-8gaj8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compactmap(_:)-2e7eu","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compactmap(_:)-35f1c","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/flatmap(_:)-5ckkd","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/flatmap(_:)-d79b","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/map(_:)-4959b","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/map(_:)-57shn","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:_:)-3z0kv","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:_:)-60cri","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(into:_:)-7p7c2","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(into:_:)-7pcof","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-95r3o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-9fgls","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:)-4bo7r","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:)-8nqxc","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:into:)-518d5","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunks(ofcount:or:into:)-8gaj8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compactmap(_:)-2e7eu","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compactmap(_:)-35f1c","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/flatmap(_:)-5ckkd","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/flatmap(_:)-d79b","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/map(_:)-4959b","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/map(_:)-57shn","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:_:)-3z0kv","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(_:_:)-60cri","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(into:_:)-7p7c2","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/reductions(into:_:)-7pcof","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence","title":"AsyncChunkedByGroupSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/iterator\/next()","title":"func next() async rethrows -> (Subject, Collected)?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/iterator","title":"AsyncChunkedOnProjectionSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/element","title":"AsyncChunkedOnProjectionSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:into:)-85znb","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:into:)-m99x","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:)-7o0fu","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:)-8frw0","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:into:)-3uagz","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:into:)-yxyu","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compactmap(_:)-4yrtm","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compactmap(_:)-6j7hm","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/flatmap(_:)-7lnu5","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/flatmap(_:)-906c2","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/map(_:)-16x5","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/map(_:)-7jw3m","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:_:)-4dn03","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:_:)-no1","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(into:_:)-1aa7y","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(into:_:)-3tvc0","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:into:)-85znb","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(by:into:)-m99x","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:)-7o0fu","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:)-8frw0","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:into:)-3uagz","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/chunks(ofcount:or:into:)-yxyu","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compactmap(_:)-4yrtm","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compactmap(_:)-6j7hm","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/flatmap(_:)-7lnu5","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/flatmap(_:)-906c2","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/map(_:)-16x5","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/map(_:)-7jw3m","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:_:)-4dn03","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(_:_:)-no1","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(into:_:)-1aa7y","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/reductions(into:_:)-3tvc0","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchunkedonprojectionsequence","title":"AsyncChunkedOnProjectionSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/iterator\/next()","title":"func next() async rethrows -> Collected?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/iterator","title":"AsyncChunksOfCountOrSignalSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/element","title":"AsyncChunksOfCountOrSignalSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:into:)-3w1be","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:into:)-71i2l","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:)-2iw52","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:)-6gkm","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:into:)-1287i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:into:)-3x76x","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compactmap(_:)-5htrq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compactmap(_:)-8dsre","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/flatmap(_:)-3p70w","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/flatmap(_:)-3v0xr","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/map(_:)-1w3rt","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/map(_:)-2xla5","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:_:)-46il4","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:_:)-748sr","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(into:_:)-5vgsk","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(into:_:)-9ablj","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:into:)-3w1be","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(by:into:)-71i2l","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:)-2iw52","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:)-6gkm","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:into:)-1287i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/chunks(ofcount:or:into:)-3x76x","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compactmap(_:)-5htrq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compactmap(_:)-8dsre","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/flatmap(_:)-3p70w","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/flatmap(_:)-3v0xr","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/map(_:)-1w3rt","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/map(_:)-2xla5","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:_:)-46il4","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(_:_:)-748sr","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(into:_:)-5vgsk","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/reductions(into:_:)-9ablj","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence","title":"AsyncChunksOfCountOrSignalSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/iterator\/next()","title":"func next() async rethrows -> Collected?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/iterator","title":"AsyncChunksOfCountSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/element","title":"AsyncChunksOfCountSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:into:)-7fnug","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:into:)-84qnr","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:)-5l6ae","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:)-9vku2","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:into:)-4i3zp","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:into:)-83mam","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compactmap(_:)-1os9s","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compactmap(_:)-5gu8z","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/flatmap(_:)-1zxci","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/flatmap(_:)-4d21d","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/map(_:)-266ni","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/map(_:)-7d3ey","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:_:)-5cznd","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:_:)-7rhy3","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(into:_:)-3mzh0","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(into:_:)-wzc3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:into:)-7fnug","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(by:into:)-84qnr","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:)-5l6ae","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:)-9vku2","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:into:)-4i3zp","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/chunks(ofcount:or:into:)-83mam","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compactmap(_:)-1os9s","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compactmap(_:)-5gu8z","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/flatmap(_:)-1zxci","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/flatmap(_:)-4d21d","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/map(_:)-266ni","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/map(_:)-7d3ey","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:_:)-5cznd","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(_:_:)-7rhy3","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(into:_:)-3mzh0","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/reductions(into:_:)-wzc3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncchunksofcountsequence","title":"AsyncChunksOfCountSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/iterator\/next()","title":"func next() async rethrows -> (Base1.Element, Base2.Element)?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/iterator","title":"AsyncCombineLatest2Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:into:)-3bhz2","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:into:)-7ydwu","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:)-9ccm6","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:)-agxc","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:into:)-48kow","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:into:)-6cks4","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compactmap(_:)-2jhv4","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compactmap(_:)-2wqma","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/flatmap(_:)-5m0tb","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/flatmap(_:)-5umsw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/map(_:)-64jnp","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/map(_:)-6w8ax","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:_:)-2chro","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:_:)-4hjff","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(into:_:)-1wij9","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(into:_:)-689yt","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/element","title":"AsyncCombineLatest2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:into:)-3bhz2","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(by:into:)-7ydwu","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:)-9ccm6","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:)-agxc","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:into:)-48kow","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/chunks(ofcount:or:into:)-6cks4","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compactmap(_:)-2jhv4","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compactmap(_:)-2wqma","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/flatmap(_:)-5m0tb","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/flatmap(_:)-5umsw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/map(_:)-64jnp","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/map(_:)-6w8ax","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:_:)-2chro","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(_:_:)-4hjff","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(into:_:)-1wij9","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/reductions(into:_:)-689yt","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/element","title":"AsyncCombineLatest2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest2sequence","title":"AsyncCombineLatest2Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/iterator\/next()","title":"func next() async rethrows -> (Base1.Element, Base2.Element, Base3.Element)?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/iterator","title":"AsyncCombineLatest3Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:into:)-6xtfo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:into:)-qxl7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:)-414ya","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:)-telv","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:into:)-528g7","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:into:)-7lop0","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compactmap(_:)-1md0n","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compactmap(_:)-3s2sz","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/flatmap(_:)-2d2xe","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/flatmap(_:)-3okwp","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/map(_:)-6h242","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/map(_:)-90xuv","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:_:)-2ro5r","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:_:)-375zy","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(into:_:)-90f79","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(into:_:)-fe74","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/element","title":"AsyncCombineLatest3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:into:)-6xtfo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(by:into:)-qxl7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:)-414ya","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:)-telv","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:into:)-528g7","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/chunks(ofcount:or:into:)-7lop0","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compactmap(_:)-1md0n","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compactmap(_:)-3s2sz","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/flatmap(_:)-2d2xe","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/flatmap(_:)-3okwp","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/map(_:)-6h242","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/map(_:)-90xuv","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:_:)-2ro5r","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(_:_:)-375zy","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(into:_:)-90f79","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/reductions(into:_:)-fe74","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/element","title":"AsyncCombineLatest3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynccombinelatest3sequence","title":"AsyncCombineLatest3Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/iterator","title":"AsyncCompactedSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:into:)-4d1ct","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:into:)-66i19","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:)-1v5xg","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:)-6xrxk","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:into:)-47c0k","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:into:)-72gm0","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compactmap(_:)-1imol","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compactmap(_:)-3c170","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/flatmap(_:)-1g1wi","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/flatmap(_:)-27epm","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/map(_:)-1ja6u","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/map(_:)-1lz7i","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:_:)-4lz5n","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:_:)-82spl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(into:_:)-28hzd","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(into:_:)-7en25","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:into:)-4d1ct","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(by:into:)-66i19","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:)-1v5xg","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:)-6xrxk","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:into:)-47c0k","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/chunks(ofcount:or:into:)-72gm0","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compactmap(_:)-1imol","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compactmap(_:)-3c170","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/flatmap(_:)-1g1wi","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/flatmap(_:)-27epm","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/map(_:)-1ja6u","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/map(_:)-1lz7i","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:_:)-4lz5n","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(_:_:)-82spl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(into:_:)-28hzd","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/reductions(into:_:)-7en25","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynccompactedsequence","title":"AsyncCompactedSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/iterator\/next()","title":"func next() async rethrows -> Base.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/iterator","title":"AsyncDebounceSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:into:)-2aqaa","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:into:)-5qxu9","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:)-1zq3q","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:)-595w7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:into:)-25fep","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:into:)-6885v","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compactmap(_:)-8a4i7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compactmap(_:)-9og8s","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/flatmap(_:)-171w9","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/flatmap(_:)-2dbsd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/map(_:)-63tmm","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/map(_:)-94lyj","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:_:)-2uzlu","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:_:)-3mcly","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(into:_:)-6l53c","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(into:_:)-cxxg","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/element","title":"AsyncDebounceSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:into:)-2aqaa","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(by:into:)-5qxu9","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:)-1zq3q","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:)-595w7","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:into:)-25fep","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/chunks(ofcount:or:into:)-6885v","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compactmap(_:)-8a4i7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compactmap(_:)-9og8s","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/flatmap(_:)-171w9","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/flatmap(_:)-2dbsd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/map(_:)-63tmm","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/map(_:)-94lyj","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:_:)-2uzlu","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(_:_:)-3mcly","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(into:_:)-6l53c","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/reductions(into:_:)-cxxg","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/element","title":"AsyncDebounceSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncdebouncesequence","title":"AsyncDebounceSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/iterator","title":"AsyncExclusiveReductionsSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:into:)-1qko0","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:into:)-6vplr","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:)-66r3t","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:)-8xhq6","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:into:)-35rht","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:into:)-8xrwr","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compactmap(_:)-4w0a0","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compactmap(_:)-6aquc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/flatmap(_:)-4cwvn","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/flatmap(_:)-59cvf","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/map(_:)-15grs","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/map(_:)-5ccqs","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:_:)-607ey","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:_:)-9xhbw","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(into:_:)-2eltp","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(into:_:)-978i0","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:into:)-1qko0","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(by:into:)-6vplr","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:)-66r3t","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:)-8xhq6","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:into:)-35rht","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/chunks(ofcount:or:into:)-8xrwr","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compactmap(_:)-4w0a0","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compactmap(_:)-6aquc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/flatmap(_:)-4cwvn","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/flatmap(_:)-59cvf","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/map(_:)-15grs","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/map(_:)-5ccqs","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:_:)-607ey","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(_:_:)-9xhbw","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(into:_:)-2eltp","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/reductions(into:_:)-978i0","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncexclusivereductionssequence","title":"AsyncExclusiveReductionsSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/iterator\/next()","title":"func next() async rethrows -> Base.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/iterator","title":"AsyncInclusiveReductionsSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:into:)-5o5r9","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:into:)-7oy7s","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:)-6g2c5","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:)-r5lf","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:into:)-1cxcq","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:into:)-37r7s","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compactmap(_:)-5f6gc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compactmap(_:)-7o7oj","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/flatmap(_:)-1zhcy","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/flatmap(_:)-36qfc","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/map(_:)-5ikee","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/map(_:)-6849h","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:_:)-2q35a","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:_:)-3ztk2","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(into:_:)-21r02","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(into:_:)-6c6se","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/element","title":"AsyncInclusiveReductionsSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:into:)-5o5r9","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(by:into:)-7oy7s","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:)-6g2c5","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:)-r5lf","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:into:)-1cxcq","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/chunks(ofcount:or:into:)-37r7s","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compactmap(_:)-5f6gc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compactmap(_:)-7o7oj","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/flatmap(_:)-1zhcy","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/flatmap(_:)-36qfc","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/map(_:)-5ikee","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/map(_:)-6849h","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:_:)-2q35a","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(_:_:)-3ztk2","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(into:_:)-21r02","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/reductions(into:_:)-6c6se","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/element","title":"AsyncInclusiveReductionsSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncinclusivereductionssequence","title":"AsyncInclusiveReductionsSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/iterator\/next()","title":"func next() async rethrows -> Base.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/iterator","title":"AsyncInterspersedSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:into:)-53xu5","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:into:)-kfx7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:)-1otmu","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:)-5svos","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:into:)-2ojle","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:into:)-czun","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compactmap(_:)-2wp1v","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compactmap(_:)-8r1n4","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/flatmap(_:)-8ukns","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/flatmap(_:)-ud4u","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncInterspersedSequence<Base>.Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/map(_:)-2d7qs","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/map(_:)-5eski","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:_:)-3hqnh","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:_:)-6y8eo","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(into:_:)-6wj27","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(into:_:)-bk8k","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/element","title":"AsyncInterspersedSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:into:)-53xu5","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(by:into:)-kfx7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:)-1otmu","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:)-5svos","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:into:)-2ojle","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/chunks(ofcount:or:into:)-czun","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compactmap(_:)-2wp1v","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compactmap(_:)-8r1n4","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/flatmap(_:)-8ukns","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/flatmap(_:)-ud4u","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncInterspersedSequence<Base>.Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/map(_:)-2d7qs","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/map(_:)-5eski","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:_:)-3hqnh","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(_:_:)-6y8eo","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(into:_:)-6wj27","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/reductions(into:_:)-bk8k","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/element","title":"AsyncInterspersedSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncinterspersedsequence","title":"AsyncInterspersedSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/iterator\/next()","title":"func next() async rethrows -> Base.Element.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/iterator","title":"AsyncJoinedBySeparatorSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/asynciterator","title":"AsyncJoinedBySeparatorSequence.AsyncIterator","type":"typealias"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/element","title":"AsyncJoinedBySeparatorSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:into:)-5uz6w","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:into:)-8ay8k","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:)-2pu62","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:)-5h4lz","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:into:)-60tze","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:into:)-pmx0","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compactmap(_:)-5084a","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compactmap(_:)-5zeop","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/flatmap(_:)-2btzh","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/flatmap(_:)-zx0l","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/map(_:)-4yzh4","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/map(_:)-6cfv","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:_:)-132f6","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:_:)-2klax","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(into:_:)-1rbu8","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(into:_:)-95v8y","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:into:)-5uz6w","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(by:into:)-8ay8k","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:)-2pu62","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:)-5h4lz","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:into:)-60tze","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/chunks(ofcount:or:into:)-pmx0","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compactmap(_:)-5084a","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compactmap(_:)-5zeop","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/flatmap(_:)-2btzh","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/flatmap(_:)-zx0l","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/map(_:)-4yzh4","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/map(_:)-6cfv","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:_:)-132f6","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(_:_:)-2klax","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(into:_:)-1rbu8","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/reductions(into:_:)-95v8y","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedbyseparatorsequence","title":"AsyncJoinedBySeparatorSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/iterator\/next()","title":"func next() async rethrows -> Base.Element.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/iterator","title":"AsyncJoinedSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/asynciterator","title":"AsyncJoinedSequence.AsyncIterator","type":"typealias"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/element","title":"AsyncJoinedSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:into:)-346e6","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:into:)-70pm7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:)-1ni3w","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:)-8shi","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:into:)-390pe","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:into:)-7rg3e","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compactmap(_:)-6hiwz","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compactmap(_:)-9r9yt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/flatmap(_:)-2f6f5","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/flatmap(_:)-3x0wh","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/map(_:)-36lgq","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/map(_:)-885kb","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:_:)-1obhx","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:_:)-74zlv","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(into:_:)-6qg2h","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(into:_:)-8kf2o","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:into:)-346e6","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(by:into:)-70pm7","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:)-1ni3w","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:)-8shi","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:into:)-390pe","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/chunks(ofcount:or:into:)-7rg3e","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compactmap(_:)-6hiwz","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compactmap(_:)-9r9yt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/flatmap(_:)-2f6f5","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/flatmap(_:)-3x0wh","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/map(_:)-36lgq","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/map(_:)-885kb","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:_:)-1obhx","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(_:_:)-74zlv","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(into:_:)-6qg2h","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/reductions(into:_:)-8kf2o","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncjoinedsequence","title":"AsyncJoinedSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/iterator\/next()","title":"func next() async -> Base.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/iterator","title":"AsyncLazySequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/element","title":"AsyncLazySequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:into:)-830kf","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:into:)-9pstz","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:)-5b8al","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:)-6b3ng","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:into:)-2zbf8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:into:)-3qa6i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compactmap(_:)-66yb7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compactmap(_:)-8qjjv","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/flatmap(_:)-3rgbw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/flatmap(_:)-7okcm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/map(_:)-186qn","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/map(_:)-66rdg","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:_:)-2g4zl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:_:)-4i9lu","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(into:_:)-6dmys","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(into:_:)-shrf","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:into:)-830kf","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(by:into:)-9pstz","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:)-5b8al","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:)-6b3ng","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:into:)-2zbf8","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/chunks(ofcount:or:into:)-3qa6i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compactmap(_:)-66yb7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compactmap(_:)-8qjjv","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/flatmap(_:)-3rgbw","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/flatmap(_:)-7okcm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/map(_:)-186qn","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/map(_:)-66rdg","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:_:)-2g4zl","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(_:_:)-4i9lu","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(into:_:)-6dmys","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/reductions(into:_:)-shrf","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynclazysequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynclazysequence","title":"AsyncLazySequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/iterator","title":"AsyncMerge2Sequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/element","title":"AsyncMerge2Sequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:into:)-35imx","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:into:)-4k0hs","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:)-1jce","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:)-4akdy","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:into:)-5d0l2","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:into:)-6uara","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compactmap(_:)-3vx4e","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compactmap(_:)-7tqjt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/flatmap(_:)-3k0lz","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/flatmap(_:)-xp9x","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/map(_:)-3qgeu","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/map(_:)-7yaat","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:_:)-41zr","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:_:)-57g5v","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(into:_:)-3gfuc","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(into:_:)-4p85w","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:into:)-35imx","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(by:into:)-4k0hs","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:)-1jce","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:)-4akdy","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:into:)-5d0l2","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/chunks(ofcount:or:into:)-6uara","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compactmap(_:)-3vx4e","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compactmap(_:)-7tqjt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/flatmap(_:)-3k0lz","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/flatmap(_:)-xp9x","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/map(_:)-3qgeu","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/map(_:)-7yaat","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:_:)-41zr","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(_:_:)-57g5v","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(into:_:)-3gfuc","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/reductions(into:_:)-4p85w","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge2sequence","title":"AsyncMerge2Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/iterator","title":"AsyncMerge3Sequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/element","title":"AsyncMerge3Sequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:into:)-46mh4","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:into:)-8aooy","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:)-32oa4","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:)-lbk4","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:into:)-2m826","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:into:)-9pxx3","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compactmap(_:)-2nc3p","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compactmap(_:)-5waaf","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/flatmap(_:)-2ed3h","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/flatmap(_:)-dme0","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/map(_:)-74mg2","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/map(_:)-760yk","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:_:)-3a09p","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:_:)-712wq","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(into:_:)-3avj3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(into:_:)-5qc05","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:into:)-46mh4","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(by:into:)-8aooy","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:)-32oa4","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:)-lbk4","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:into:)-2m826","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/chunks(ofcount:or:into:)-9pxx3","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compactmap(_:)-2nc3p","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compactmap(_:)-5waaf","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/flatmap(_:)-2ed3h","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/flatmap(_:)-dme0","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/map(_:)-74mg2","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/map(_:)-760yk","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:_:)-3a09p","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(_:_:)-712wq","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(into:_:)-3avj3","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/reductions(into:_:)-5qc05","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncmerge3sequence","title":"AsyncMerge3Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/iterator\/next()","title":"func next() async rethrows -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/iterator","title":"AsyncRemoveDuplicatesSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/element","title":"AsyncRemoveDuplicatesSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:into:)-2821n","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:into:)-6mdyd","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:)-8uglx","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:)-wt30","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:into:)-7peic","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:into:)-9lhml","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compactmap(_:)-895qt","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compactmap(_:)-g03a","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/flatmap(_:)-4rdxn","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/flatmap(_:)-5l3m5","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/map(_:)-20wy4","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/map(_:)-5xo1b","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:_:)-2fufi","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:_:)-8ie2k","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(into:_:)-464w5","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(into:_:)-8r98r","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:into:)-2821n","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(by:into:)-6mdyd","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:)-8uglx","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:)-wt30","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:into:)-7peic","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/chunks(ofcount:or:into:)-9lhml","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compactmap(_:)-895qt","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compactmap(_:)-g03a","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/flatmap(_:)-4rdxn","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/flatmap(_:)-5l3m5","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/map(_:)-20wy4","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/map(_:)-5xo1b","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:_:)-2fufi","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(_:_:)-8ie2k","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(into:_:)-464w5","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/reductions(into:_:)-8r98r","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncremoveduplicatessequence","title":"AsyncRemoveDuplicatesSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/iterator\/next()","title":"func next() async rethrows -> Reduced?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/iterator","title":"AsyncThrottleSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:into:)-1atq8","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:into:)-8k6r2","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:)-574ah","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:)-8dyaq","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:into:)-3k7c5","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:into:)-82bps","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compactmap(_:)-2pffj","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compactmap(_:)-5pbxp","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/flatmap(_:)-2pwl0","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/flatmap(_:)-5ormm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/map(_:)-4bd0b","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/map(_:)-7fugz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:_:)-2vv8o","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:_:)-79w49","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(into:_:)-3pk3v","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(into:_:)-6mees","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/element","title":"AsyncThrottleSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:into:)-1atq8","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(by:into:)-8k6r2","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:)-574ah","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:)-8dyaq","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:into:)-3k7c5","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/chunks(ofcount:or:into:)-82bps","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compactmap(_:)-2pffj","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compactmap(_:)-5pbxp","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/flatmap(_:)-2pwl0","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/flatmap(_:)-5ormm","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/map(_:)-4bd0b","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/map(_:)-7fugz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:_:)-2vv8o","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(_:_:)-79w49","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(into:_:)-3pk3v","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/reductions(into:_:)-6mees","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/element","title":"AsyncThrottleSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncthrottlesequence","title":"AsyncThrottleSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/iterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/iterator","title":"AsyncThrowingExclusiveReductionsSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:into:)-1vxjd","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:into:)-2kt98","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:)-5wk32","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:)-6msqz","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:into:)-377is","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:into:)-86esc","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compactmap(_:)-6u376","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compactmap(_:)-83j65","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/flatmap(_:)-548yi","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/flatmap(_:)-811m0","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/map(_:)-3wt95","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/map(_:)-7q5on","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:_:)-22k1m","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:_:)-7se72","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(into:_:)-4tjxp","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(into:_:)-5udzf","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:into:)-1vxjd","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(by:into:)-2kt98","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:)-5wk32","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:)-6msqz","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:into:)-377is","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/chunks(ofcount:or:into:)-86esc","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compactmap(_:)-6u376","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compactmap(_:)-83j65","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/flatmap(_:)-548yi","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/flatmap(_:)-811m0","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/map(_:)-3wt95","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/map(_:)-7q5on","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:_:)-22k1m","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(_:_:)-7se72","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(into:_:)-4tjxp","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/reductions(into:_:)-5udzf","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingexclusivereductionssequence","title":"AsyncThrowingExclusiveReductionsSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/iterator\/next()","title":"func next() async throws -> Base.Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/iterator","title":"AsyncThrowingInclusiveReductionsSequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:into:)-9nbx4","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:into:)-9wp96","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:)-9030","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:)-9px9o","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:into:)-47lag","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:into:)-8a6z3","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compactmap(_:)-1lzsq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compactmap(_:)-6zw2y","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/flatmap(_:)-6t526","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/flatmap(_:)-7cpdo","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/map(_:)-4fu4r","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/map(_:)-9ggzu","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:_:)-28cnm","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:_:)-93q5c","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(into:_:)-25udw","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(into:_:)-8k410","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/element","title":"AsyncThrowingInclusiveReductionsSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:into:)-9nbx4","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(by:into:)-9wp96","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:)-9030","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:)-9px9o","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:into:)-47lag","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/chunks(ofcount:or:into:)-8a6z3","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compactmap(_:)-1lzsq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compactmap(_:)-6zw2y","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/flatmap(_:)-6t526","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/flatmap(_:)-7cpdo","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/map(_:)-4fu4r","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/map(_:)-9ggzu","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:_:)-28cnm","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(_:_:)-93q5c","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(into:_:)-25udw","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/reductions(into:_:)-8k410","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/element","title":"AsyncThrowingInclusiveReductionsSequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowinginclusivereductionssequence","title":"AsyncThrowingInclusiveReductionsSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/iterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/iterator","title":"AsyncThrowingRemoveDuplicatesSequence.Iterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/element","title":"AsyncThrowingRemoveDuplicatesSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:into:)-5dzhx","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:into:)-9e9p5","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:)-6ujhy","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:)-9dexe","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:into:)-2n9r5","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:into:)-32lpc","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compactmap(_:)-5xlsh","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compactmap(_:)-7tejq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/flatmap(_:)-7oo4i","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/flatmap(_:)-8wrke","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/map(_:)-3st6w","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/map(_:)-5jaa7","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:_:)-2b973","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:_:)-9hszc","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(into:_:)-49030","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(into:_:)-kljz","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:into:)-5dzhx","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(by:into:)-9e9p5","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:)-6ujhy","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:)-9dexe","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:into:)-2n9r5","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/chunks(ofcount:or:into:)-32lpc","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compactmap(_:)-5xlsh","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compactmap(_:)-7tejq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/flatmap(_:)-7oo4i","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/flatmap(_:)-8wrke","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/map(_:)-3st6w","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/map(_:)-5jaa7","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:_:)-2b973","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(_:_:)-9hszc","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(into:_:)-49030","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/reductions(into:_:)-kljz","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asyncthrowingremoveduplicatessequence","title":"AsyncThrowingRemoveDuplicatesSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/iterator\/next()","title":"func next() async -> C.Instant?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/iterator","title":"AsyncTimerSequence.Iterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/init(interval:tolerance:clock:)","title":"init(interval: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/element","title":"AsyncTimerSequence.Element","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/repeating(every:tolerance:)","title":"static func repeating(every: Duration, tolerance: Duration?) -> AsyncTimerSequence<SuspendingClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/repeating(every:tolerance:clock:)","title":"static func repeating(every: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncTimerSequence<C>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:into:)-5vx8x","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:into:)-7edi5","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:)-53ncy","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:)-7u0v1","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:into:)-1ttx7","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:into:)-4o2m7","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compactmap(_:)-2ybse","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compactmap(_:)-6fdqt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/flatmap(_:)-5f7pc","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/flatmap(_:)-5i000","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/map(_:)-5dnxh","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/map(_:)-871hb","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:_:)-31r18","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:_:)-6cgze","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(into:_:)-6fpo9","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(into:_:)-9tk2s","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:into:)-5vx8x","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(by:into:)-7edi5","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:)-53ncy","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:)-7u0v1","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:into:)-1ttx7","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/chunks(ofcount:or:into:)-4o2m7","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compactmap(_:)-2ybse","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compactmap(_:)-6fdqt","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/flatmap(_:)-5f7pc","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/flatmap(_:)-5i000","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/map(_:)-5dnxh","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/map(_:)-871hb","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:_:)-31r18","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(_:_:)-6cgze","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(into:_:)-6fpo9","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/reductions(into:_:)-9tk2s","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynctimersequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynctimersequence","title":"AsyncTimerSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/iterator\/next()","title":"func next() async rethrows -> (Base1.Element, Base2.Element)?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/iterator","title":"AsyncZip2Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:into:)-70lfx","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:into:)-7r9z2","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:)-11asi","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:)-85cu1","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:into:)-2k98x","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:into:)-3k1kn","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compactmap(_:)-8bxhi","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compactmap(_:)-9258f","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/flatmap(_:)-7fatu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/flatmap(_:)-9e7uy","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/map(_:)-19yvg","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/map(_:)-1ho08","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:_:)-6n8t3","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:_:)-6qx6h","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(into:_:)-5l5yj","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(into:_:)-8tk71","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/element","title":"AsyncZip2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:into:)-70lfx","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(by:into:)-7r9z2","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:)-11asi","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:)-85cu1","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:into:)-2k98x","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/chunks(ofcount:or:into:)-3k1kn","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compactmap(_:)-8bxhi","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compactmap(_:)-9258f","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/flatmap(_:)-7fatu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/flatmap(_:)-9e7uy","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/map(_:)-19yvg","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/map(_:)-1ho08","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:_:)-6n8t3","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(_:_:)-6qx6h","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(into:_:)-5l5yj","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/reductions(into:_:)-8tk71","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/element","title":"AsyncZip2Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynczip2sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynczip2sequence","title":"AsyncZip2Sequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/iterator\/next()","title":"func next() async rethrows -> (Base1.Element, Base2.Element, Base3.Element)?","type":"method"}],"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/iterator","title":"AsyncZip3Sequence.Iterator","type":"struct"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:into:)-4kvq9","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:into:)-76jdu","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:)-7wqik","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:)-9sb40","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:into:)-86opq","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:into:)-9h9vc","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compactmap(_:)-493ac","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compactmap(_:)-71k3f","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/flatmap(_:)-4uy4f","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/flatmap(_:)-5nsoo","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/map(_:)-2s1gx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/map(_:)-8hezx","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:_:)-413xh","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:_:)-5cvl6","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(into:_:)-441ju","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(into:_:)-5n5ya","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/element","title":"AsyncZip3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:)","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:into:)-4kvq9","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(by:into:)-76jdu","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:)-7wqik","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:)-9sb40","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:into:)-86opq","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/chunks(ofcount:or:into:)-9h9vc","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compactmap(_:)-493ac","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compactmap(_:)-71k3f","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/flatmap(_:)-4uy4f","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/flatmap(_:)-5nsoo","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/makeasynciterator()","title":"func makeAsyncIterator() -> Iterator","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/map(_:)-2s1gx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/map(_:)-8hezx","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:)","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:_:)-413xh","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(_:_:)-5cvl6","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(into:_:)-441ju","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/reductions(into:_:)-5n5ya","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/removeduplicates(by:)","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/element","title":"AsyncZip3Sequence.Element","type":"typealias"}],"path":"\/documentation\/asyncalgorithms\/asynczip3sequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/asyncalgorithms\/asynczip3sequence","title":"AsyncZip3Sequence","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/chain(_:_:)","title":"func chain<Base1, Base2>(Base1, Base2) -> AsyncChain2Sequence<Base1, Base2>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/chain(_:_:_:)","title":"func chain<Base1, Base2, Base3>(Base1, Base2, Base3) -> AsyncChain3Sequence<Base1, Base2, Base3>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/combinelatest(_:_:)","title":"func combineLatest<Base1, Base2>(Base1, Base2) -> AsyncCombineLatest2Sequence<Base1, Base2>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/combinelatest(_:_:_:)","title":"func combineLatest<Base1, Base2, Base3>(Base1, Base2, Base3) -> AsyncCombineLatest3Sequence<Base1, Base2, Base3>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/merge(_:_:)","title":"func merge<Base1, Base2>(Base1, Base2) -> AsyncMerge2Sequence<Base1, Base2>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/merge(_:_:_:)","title":"func merge<Base1, Base2, Base3>(Base1, Base2, Base3) -> AsyncMerge3Sequence<Base1, Base2, Base3>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/zip(_:_:)","title":"func zip<Base1, Base2>(Base1, Base2) -> AsyncZip2Sequence<Base1, Base2>","type":"func"},{"path":"\/documentation\/asyncalgorithms\/zip(_:_:_:)","title":"func zip<Base1, Base2, Base3>(Base1, Base2, Base3) -> AsyncZip3Sequence<Base1, Base2, Base3>","type":"func"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/swift\/sequence\/async","title":"var async: AsyncLazySequence<Self>","type":"property"}],"path":"\/documentation\/asyncalgorithms\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/swift\/dictionary\/init(_:uniquingkeyswith:)","title":"init<S>(S, uniquingKeysWith: (Value, Value) async throws -> Value) async rethrows","type":"init"},{"path":"\/documentation\/asyncalgorithms\/swift\/dictionary\/init(grouping:by:)","title":"init<S>(grouping: S, by: (S.Element) async throws -> Key) async rethrows","type":"init"},{"path":"\/documentation\/asyncalgorithms\/swift\/dictionary\/init(uniquekeyswithvalues:)","title":"init<S>(uniqueKeysWithValues: S) async rethrows","type":"init"}],"path":"\/documentation\/asyncalgorithms\/swift\/dictionary","title":"Dictionary","type":"extension"}],"path":"\/documentation\/asyncalgorithms\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/buffer(_:)","title":"func buffer<Buffer>(() -> Buffer) -> AsyncBufferSequence<Self, Buffer>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/buffer(policy:)","title":"func buffer(policy: AsyncLimitBuffer<Element>.Policy) -> AsyncBufferSequence<Self, AsyncLimitBuffer<Element>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(by:)-4990j","title":"func chunked<Signal>(by: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(by:)-6ueqa","title":"func chunked(by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(by:)-94l6m","title":"func chunked<C>(by: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(by:into:)-5mt7y","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(by:into:)-5yoy3","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Element, Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunked(on:)","title":"func chunked<Subject>(on: (Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Element]>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:or:)-2wd2p","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:or:)-415vt","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:or:into:)-1umba","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/chunks(ofcount:or:into:)-7v0ax","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/interspersed(with:)","title":"func interspersed(with: Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/joined()","title":"func joined() -> AsyncJoinedSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> AsyncJoinedBySeparatorSequence<Self, Separator>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:)-4efsu","title":"func reductions((Element, Element) async throws -> Element) -> AsyncThrowingInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:)-58t9p","title":"func reductions((Element, Element) async -> Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:_:)-50jy3","title":"func reductions<Result>(Result, (Result, Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(_:_:)-8lxv9","title":"func reductions<Result>(Result, (Result, Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(into:_:)-1ghas","title":"func reductions<Result>(into: Result, (inout Result, Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/reductions(into:_:)-t4an","title":"func reductions<Result>(into: Result, (inout Result, Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/removeduplicates(by:)-6epc2","title":"func removeDuplicates(by: (Element, Element) async throws -> Bool) -> AsyncThrowingRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/removeduplicates(by:)-7geff","title":"func removeDuplicates(by: (Element, Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/throttle(for:clock:latest:)","title":"func throttle<C>(for: C.Instant.Duration, clock: C, latest: Bool) -> AsyncThrottleSequence<Self, C, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/throttle(for:clock:reducing:)","title":"func throttle<C, Reduced>(for: C.Instant.Duration, clock: C, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, C, Reduced>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/throttle(for:latest:)","title":"func throttle(for: Duration, latest: Bool) -> AsyncThrottleSequence<Self, ContinuousClock, Element>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence\/throttle(for:reducing:)","title":"func throttle<Reduced>(for: Duration, reducing: (Reduced?, Element) async -> Reduced) -> AsyncThrottleSequence<Self, ContinuousClock, Reduced>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/_concurrency\/asyncsequence","title":"AsyncSequence","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/task\/select(_:)-5lblr","title":"static func select<Tasks>(Tasks) async -> Task<Success, Failure>","type":"method"},{"path":"\/documentation\/asyncalgorithms\/_concurrency\/task\/select(_:)-6z7kp","title":"static func select(Task<Success, Failure>...) async -> Task<Success, Failure>","type":"method"}],"path":"\/documentation\/asyncalgorithms\/_concurrency\/task","title":"Task","type":"extension"}],"path":"\/documentation\/asyncalgorithms\/_concurrency","title":"_Concurrency","type":"extension"}],"path":"\/documentation\/asyncalgorithms","title":"AsyncAlgorithms","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}